syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.Contracts.CharityDonateContract";

service CharityDonateContract {
    option (aelf.csharp_state) = "AElf.Contracts.CharityDonateContract.CharityDonateContractState";

    // Actions
    
    rpc SetUser(User) returns(google.protobuf.Empty){
    }

    rpc SetProject(ProjectInformation) returns(google.protobuf.Empty){
    }

    rpc Donate(Donation) returns (google.protobuf.Empty){
    }

    //Views

    rpc GetProjectInformation(aelf.Address) returns(ProjectInformation){
        option(aelf.is_view) = true;
    }

    rpc CheckMyDonate(aelf.Address) returns( DonationIds){
        option(aelf.is_view) = true;
    }


    //    rpc Initial (google.protobuf.Empty) returns (google.protobuf.Empty) {
//    }
//    rpc Register (google.protobuf.Empty) returns (google.protobuf.Empty) {
//    }
//    rpc Deposit (aelf.SInt64Value) returns (google.protobuf.Empty) {
//    }
//    rpc Play (aelf.SInt64Value) returns (aelf.SInt64Value) {
//    }
//    rpc Bingo (aelf.Hash) returns (google.protobuf.BoolValue) {
//    }
//    rpc Quit (google.protobuf.Empty) returns (google.protobuf.Empty) {
//    }
//
//    // Views
//    rpc GetAward (aelf.Hash) returns (aelf.SInt64Value) {
//        option (aelf.is_view) = true;
//    }
//    rpc GetPlayerInformation (aelf.Address) returns (PlayerInformation) {
//        option (aelf.is_view) = true;
//    }
}

message User{
    aelf.Address id = 1;
    string name = 2;
    sint32 account = 3;
    // repeated Donation donations= 4;
    repeated aelf.Hash donationIds =5;
}

message ProjectInformation{
    aelf.Address id = 1;
    sint32 amount = 2;
    sint32 goal = 3;
    google.protobuf.Timestamp endTime = 4;
}

message Donation{
    aelf.Hash id = 1;
    aelf.Address from =2;
    aelf.Address to =3;
    sint32 money =4;
    google.protobuf.Timestamp submitTime = 5;
}

message DonationIds{
    repeated aelf.Hash donationIds = 1;
}